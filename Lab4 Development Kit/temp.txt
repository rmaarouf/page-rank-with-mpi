Our implementation is very similar to the algorithm in the serialtester.c file. We took the same algorithm and used the mpi function MPI_Allgatherv. MPI_Allgatherv allows for the gathering data from all processes and deliver it all the other processes. MPI_Allgatherv unlike MPI_Allgather allows for the blocks of data gathered to be different in size.
We have a shared result int array that is MPI_Allgatherv to. The size of the array to be copied is derived by total length of result array divided by MPI_Comm_size. Similarly, the offsets (displs or starting section of data to be copied) are derived from the MPI_Comm_rank times the size of the partition.  In the case that there is an remainder in the previous operation, the final partition size and end section of the final (highest ranked) process is adjusted accordingly. In this way the serial algorithm is split across all available processes, and gathered to the output.

There were some errors that could be due to edge cases in number of nodes
